<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    " default-lazy-init="true" default-autowire-candidates="*ev"
    default-init-method="init"
default-destroy-method="cleanup">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location"  value="application.properties"/>
    </bean>

    <bean id="event" class="com.deliver.model.Event" lazy-init="true" autowire-candidate="false" scope="prototype"
          init-method="init"
    destroy-method="cleanup">
    </bean>
    <bean id="ticket" class="com.deliver.model.Ticket" depends-on="user, event">
    </bean>
    <bean id="user" class="com.deliver.model.User">
    </bean>

    <bean id="eventService" class="com.deliver.Service.EventService">
    </bean>
    <bean id="ticketService" class="com.deliver.Service.TicketService">
    </bean>
    <bean id="userService" class="com.deliver.Service.UserService">
    </bean>
    <bean id="bookingFacade" class="com.deliver.facade.BookingFacade">
        <constructor-arg ref="eventService" />
        <constructor-arg ref="ticketService" />
        <constructor-arg ref="userService" />
    </bean>
    <bean id="eventDao" class="com.deliver.dao.EventDao">
    </bean>
    <bean id="ticketDao" class="com.deliver.dao.TicketDao">
    </bean>
    <bean id="userDao" class="com.deliver.dao.UserDao">
    </bean>
    <bean id="storage" class="com.deliver.storage.Storage">
        <property name="loadFilePath" value="${loadFilePath}" />
    </bean>
    <context:annotation-config />

    <bean id="inheritedTestBean" abstract="true">
        <property name="name" value="parent"/>
        <property name="age" value="1"/>
    </bean>

    <bean id="inheritsWithDifferentClass"
          class="org.springframework.beans.DerivedTestBean"
          parent="inheritedTestBean" init-method="initialize">
        <property name="name" value="override"></property>
        <!-- the age property value of 1 will be inherited from parent -->
    </bean>
</beans>